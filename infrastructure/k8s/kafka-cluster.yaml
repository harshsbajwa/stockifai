apiVersion: v1
kind: Namespace
metadata:
  name: stockifai
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: stockifai
  labels:
    app: zookeeper
spec:
  ports:
  - port: 2181
    name: client
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: stockifai
spec:
  serviceName: zookeeper
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.6.0
        ports:
        - containerPort: 2181
          name: client
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        - name: ZOOKEEPER_SERVER_ID
          value: "1"
        - name: KAFKA_OPTS 
          value: "-Dzookeeper.4lw.commands.whitelist=*"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "echo ruok | nc localhost 2181 | grep imok"
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "echo ruok | nc localhost 2181 | grep imok"
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: stockifai
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    name: internal
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: stockifai
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: wait-for-zookeeper
        image: busybox:1.36
        command:
        - 'sh'
        - '-c'
        - |
          echo "Waiting for Zookeeper..."
          until nc -z zookeeper.stockifai.svc.cluster.local 2181; do
            echo "Zookeeper not ready, waiting..."
            sleep 2
          done
          echo "Zookeeper is ready!"
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.6.0
        ports:
        - containerPort: 9092
          name: internal
        env:
        - name: KAFKA_BROKER_ID
          value: "0"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper.stockifai.svc.cluster.local:2181"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "INTERNAL:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INTERNAL://kafka-0.kafka.stockifai.svc.cluster.local:9092"
        - name: KAFKA_LISTENERS
          value: "INTERNAL://0.0.0.0:9092"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "INTERNAL"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_HEAP_OPTS
          value: "-Xms256m -Xmx512m"
        resources:
          requests:
            memory: "300Mi"
            cpu: "50m"
          limits:
            memory: "700Mi"
            cpu: "300m"
      - name: health-checker
        image: busybox:1.36
        command: ["/bin/sh", "-c", "sleep infinity"]
        resources:
          requests:
            cpu: "10m"
            memory: "20Mi"
          limits:
            cpu: "50m"
            memory: "50Mi"
        startupProbe:
          exec:
            command: ["nc", "-z", "localhost", "9092"]
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 30
        readinessProbe:
          exec:
            command: ["nc", "-z", "localhost", "9092"]
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command: ["nc", "-z", "localhost", "9092"]
          initialDelaySeconds: 60
          periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry-svc
  namespace: stockifai
spec:
  ports:
  - port: 8081
  selector:
    app: schema-registry-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry-svc
  namespace: stockifai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry-svc
  template:
    metadata:
      labels:
        app: schema-registry-svc
    spec:
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.36
        command: 
        - 'sh'
        - '-c'
        - |
          echo "Waiting for Kafka to be ready..."
          until nc -z kafka.stockifai.svc.cluster.local 9092; do
            echo "Kafka not ready, waiting..."
            sleep 5
          done
          echo "Kafka is ready!"
          sleep 10
      containers:
      - name: schema-registry-svc
        image: confluentinc/cp-schema-registry:7.6.0
        ports:
        - containerPort: 8081
        env:
        - name: SCHEMA_REGISTRY_HOST_NAME
          value: "schema-registry-svc"
        - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
          value: "PLAINTEXT://kafka.stockifai.svc.cluster.local:9092"
        - name: SCHEMA_REGISTRY_LISTENERS
          value: "http://0.0.0.0:8081"
        - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
          value: "_schemas"
        - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: SCHEMA_REGISTRY_DEBUG
          value: "false"
        - name: SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL
          value: "BACKWARD"
        - name: SCHEMA_REGISTRY_KAFKASTORE_INIT_TIMEOUT_MS
          value: "60000"
        - name: SCHEMA_REGISTRY_KAFKASTORE_TIMEOUT_MS
          value: "10000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /subjects
            port: 8081
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /subjects
            port: 8081
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 30
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /subjects
            port: 8081
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 30
