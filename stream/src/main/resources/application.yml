server:
  port: 8080
  servlet:
    context-path: /stream
  shutdown: graceful

spring:
  application:
    name: stockifai-stream
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 10
      buffer-memory: 33554432
      compression-type: snappy
      enable-idempotence: true
      properties:
        max.in.flight.requests.per.connection: 5
        retry.backoff.ms: 100
        request.timeout.ms: 30000
        delivery.timeout.ms: 120000
        schema.registry.url: ${app.schema-registry-url}
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

app:
  schema-registry-url: ${SCHEMA_REGISTRY_URL_K3S:http://localhost:8081}
  stocks: ${MONITORED_STOCKS:PANW,NVDA,AAPL,MSFT,RBLX,NFLX,PYPL,AB,GOOGL,DIS,TSLA,CRM,V,MU,AXP}
  alphavantage:
    api:
      key: ${ALPHAVANTAGE_API_KEY:#{null}}
    baseUrl: https://www.alphavantage.co
  finnhub:
    api:
      key: ${FINNHUB_API_KEY:#{null}}
    baseUrl: https://finnhub.io/api/v1
  fred:
    api:
      key: ${FRED_API_KEY:#{null}}
    baseUrl: https://api.stlouisfed.org
  collection:
    enabled: true

logging:
  level:
    com.harshsbajwa.stockifai: INFO
    org.apache.kafka: WARN
    reactor.netty: WARN
    io.confluent: WARN

---
spring:
  config:
    activate:
      on-profile: docker
  kafka:
    bootstrap-servers: kafka:9093
    schema-registry-url: http://schema-registry:8081
